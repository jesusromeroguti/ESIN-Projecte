// Opcions BST, AVL, Hash Table (diccionaris), Tries
struct node_hash{
  nat _k; // Clau
  phone _tel; // Valor
  node_hash *seg;
  node_hash(const nat &k, const phone &tel, node_hash *seg = NULL) throw(error);
  node_hash();
};

node_hash **_taula; // Taula de punters node_hash
nat _size;          // Mida de la Taula
nat _quants;        // Quants elements hi ha a la Taula

// static long const MULT = 31415926;
// Funció privada de hash
nat funcio_hash(nat x) const throw();

// Funció privada que retorna el punter on hi ha l'element
node_hash* pos_element(nat num) const throw();

// Funcio swap auxiliar pel operator=
void swap(call_registry& R) throw();

// Funcio que calcula el factor de carrega.
// Retorna cert si i nomes si el factor de carrgea es
// superior a 0.75
bool factor_carrega();

// Funcio que realitza un augment del tamany
// de la _tala per fer Redispersió
void redispersio() const throw(){
  node_hash **nova_taula = new node_hash*[_size*2];

  for(int i = 0; i < _taula; i++){
    node_hash *p = _taula[i];
    while(p != NULL){
      nat clau = p->_k;
      node_hash nova_posicio = funcio_hash(clau);

    }
  }
}
